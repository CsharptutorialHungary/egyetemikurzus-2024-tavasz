// <auto-generated />
using System;
using CommunitySite.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace CommunitySite.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20240413120235_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("SZABOKD")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("FELHASZNALO_SEQ");

            modelBuilder.Entity("CommunitySite.Data.Entities.Friend", b =>
                {
                    b.Property<string>("FriendStartDate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("FRIEND_START_DATE");

                    b.Property<int?>("Friendid1")
                        .HasColumnType("INT")
                        .HasColumnName("FRIENDID1");

                    b.Property<int?>("Friendid2")
                        .HasColumnType("INT")
                        .HasColumnName("FRIENDID2");

                    b.Property<int?>("IsFriend")
                        .HasColumnType("INT")
                        .HasColumnName("IS_FRIEND");

                    b.HasIndex("Friendid1");

                    b.HasIndex("Friendid2");

                    b.ToTable("FRIENDS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Include", b =>
                {
                    b.Property<int?>("Commentid")
                        .HasColumnType("INT")
                        .HasColumnName("COMMENTID");

                    b.Property<int?>("Postid")
                        .HasColumnType("INT")
                        .HasColumnName("POSTID");

                    b.HasIndex("Commentid");

                    b.HasIndex("Postid");

                    b.ToTable("INCLUDES", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Managegroup", b =>
                {
                    b.Property<int?>("Groupid")
                        .HasColumnType("INT")
                        .HasColumnName("GROUPID");

                    b.Property<string>("JoinDate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("JOIN_DATE");

                    b.Property<int?>("Userid")
                        .HasColumnType("INT")
                        .HasColumnName("USERID");

                    b.HasIndex("Groupid");

                    b.HasIndex("Userid");

                    b.ToTable("MANAGEGROUPS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Message", b =>
                {
                    b.Property<int>("Messageid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("MESSAGEID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Messageid"));

                    b.Property<string>("MessageText")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("MESSAGE_TEXT");

                    b.Property<int?>("Receiverid")
                        .HasColumnType("INT")
                        .HasColumnName("RECEIVERID");

                    b.Property<string>("SendDate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("SEND_DATE");

                    b.Property<int?>("Senderid")
                        .HasColumnType("INT")
                        .HasColumnName("SENDERID");

                    b.HasKey("Messageid")
                        .HasName("SYS_C0010567");

                    b.HasIndex("Receiverid");

                    b.HasIndex("Senderid");

                    b.ToTable("MESSAGES", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Permission", b =>
                {
                    b.Property<int>("Permissionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("PERMISSIONID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Permissionid"));

                    b.Property<string>("PermissionName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("PERMISSION_NAME");

                    b.HasKey("Permissionid")
                        .HasName("SYS_C0010560");

                    b.ToTable("PERMISSIONS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Photo", b =>
                {
                    b.Property<int>("Photoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("PHOTOID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Photoid"));

                    b.Property<int?>("PhotoSize")
                        .HasColumnType("INT")
                        .HasColumnName("PHOTO_SIZE");

                    b.Property<string>("PhotoType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("PHOTO_TYPE");

                    b.Property<string>("PhotoUrl")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("PHOTO_URL");

                    b.Property<int?>("Userid")
                        .HasColumnType("INT")
                        .HasColumnName("USERID");

                    b.HasKey("Photoid")
                        .HasName("SYS_C0010576");

                    b.HasIndex("Userid");

                    b.ToTable("PHOTOS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Post", b =>
                {
                    b.Property<int>("Postid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("POSTID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Postid"));

                    b.Property<int?>("Groupid")
                        .HasColumnType("INT")
                        .HasColumnName("GROUPID");

                    b.Property<int?>("Photoid")
                        .HasColumnType("INT")
                        .HasColumnName("PHOTOID");

                    b.Property<string>("PostDate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("POST_DATE");

                    b.Property<string>("PostText")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("POST_TEXT");

                    b.Property<int?>("Userid")
                        .HasColumnType("INT")
                        .HasColumnName("USERID");

                    b.HasKey("Postid")
                        .HasName("SYS_C0010579");

                    b.HasIndex("Groupid");

                    b.HasIndex("Photoid");

                    b.HasIndex("Userid");

                    b.ToTable("POSTS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Sitecomment", b =>
                {
                    b.Property<int>("Commentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("COMMENTID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Commentid"));

                    b.Property<string>("CommentDate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("COMMENT_DATE");

                    b.Property<string>("CommentText")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("COMMENT_TEXT");

                    b.Property<int?>("Postid")
                        .HasColumnType("INT")
                        .HasColumnName("POSTID");

                    b.Property<int?>("Userid")
                        .HasColumnType("INT")
                        .HasColumnName("USERID");

                    b.HasKey("Commentid")
                        .HasName("SYS_C0010584");

                    b.HasIndex("Postid");

                    b.HasIndex("Userid");

                    b.ToTable("SITECOMMENTS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Sitegroup", b =>
                {
                    b.Property<int>("Groupid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("GROUPID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Groupid"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("NAME");

                    b.Property<int?>("Ownerid")
                        .HasColumnType("INT")
                        .HasColumnName("OWNERID");

                    b.HasKey("Groupid")
                        .HasName("SYS_C0010571");

                    b.HasIndex("Ownerid");

                    b.ToTable("SITEGROUPS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Siteuser", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("USERID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Userid"));

                    b.Property<string>("BirthDate")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("LAST_NAME");

                    b.Property<int?>("Permissionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(1)
                        .HasColumnName("PERMISSIONID");

                    b.Property<string>("School")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("SCHOOL");

                    b.Property<string>("SurName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("SUR_NAME");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("USERNAME");

                    b.Property<string>("Workplace")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("WORKPLACE");

                    b.HasKey("Userid")
                        .HasName("SYS_C0010562");

                    b.HasIndex("Permissionid");

                    b.ToTable("SITEUSERS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Friend", b =>
                {
                    b.HasOne("CommunitySite.Data.Entities.Siteuser", "Friendid1Navigation")
                        .WithMany()
                        .HasForeignKey("Friendid1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010564");

                    b.HasOne("CommunitySite.Data.Entities.Siteuser", "Friendid2Navigation")
                        .WithMany()
                        .HasForeignKey("Friendid2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010565");

                    b.Navigation("Friendid1Navigation");

                    b.Navigation("Friendid2Navigation");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Include", b =>
                {
                    b.HasOne("CommunitySite.Data.Entities.Sitecomment", "Comment")
                        .WithMany()
                        .HasForeignKey("Commentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010588");

                    b.HasOne("CommunitySite.Data.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("Postid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010587");

                    b.Navigation("Comment");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Managegroup", b =>
                {
                    b.HasOne("CommunitySite.Data.Entities.Sitegroup", "Group")
                        .WithMany()
                        .HasForeignKey("Groupid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010574");

                    b.HasOne("CommunitySite.Data.Entities.Siteuser", "User")
                        .WithMany()
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010573");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Message", b =>
                {
                    b.HasOne("CommunitySite.Data.Entities.Siteuser", "Receiver")
                        .WithMany("MessageReceivers")
                        .HasForeignKey("Receiverid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010569");

                    b.HasOne("CommunitySite.Data.Entities.Siteuser", "Sender")
                        .WithMany("MessageSenders")
                        .HasForeignKey("Senderid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010568");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Photo", b =>
                {
                    b.HasOne("CommunitySite.Data.Entities.Siteuser", "User")
                        .WithMany("Photos")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010577");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Post", b =>
                {
                    b.HasOne("CommunitySite.Data.Entities.Sitegroup", "Group")
                        .WithMany("Posts")
                        .HasForeignKey("Groupid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010582");

                    b.HasOne("CommunitySite.Data.Entities.Photo", "Photo")
                        .WithMany("Posts")
                        .HasForeignKey("Photoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010581");

                    b.HasOne("CommunitySite.Data.Entities.Siteuser", "User")
                        .WithMany("Posts")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010580");

                    b.Navigation("Group");

                    b.Navigation("Photo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Sitecomment", b =>
                {
                    b.HasOne("CommunitySite.Data.Entities.Post", "Post")
                        .WithMany("Sitecomments")
                        .HasForeignKey("Postid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010585");

                    b.HasOne("CommunitySite.Data.Entities.Siteuser", "User")
                        .WithMany("Sitecomments")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010586");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Sitegroup", b =>
                {
                    b.HasOne("CommunitySite.Data.Entities.Siteuser", "Owner")
                        .WithMany("Sitegroups")
                        .HasForeignKey("Ownerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010572");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Siteuser", b =>
                {
                    b.HasOne("CommunitySite.Data.Entities.Permission", "Permission")
                        .WithMany("Siteusers")
                        .HasForeignKey("Permissionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010563");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Permission", b =>
                {
                    b.Navigation("Siteusers");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Photo", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Post", b =>
                {
                    b.Navigation("Sitecomments");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Sitegroup", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("CommunitySite.Data.Entities.Siteuser", b =>
                {
                    b.Navigation("MessageReceivers");

                    b.Navigation("MessageSenders");

                    b.Navigation("Photos");

                    b.Navigation("Posts");

                    b.Navigation("Sitecomments");

                    b.Navigation("Sitegroups");
                });
#pragma warning restore 612, 618
        }
    }
}
