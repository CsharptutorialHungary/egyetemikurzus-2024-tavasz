// <auto-generated />
using System;
using CommunitySite.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace CommunitySite.Migrations
{
    [DbContext(typeof(CommunitySiteContext))]
    [Migration("20240506195000_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("SZABOKD")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("FELHASZNALO_SEQ");

            modelBuilder.Entity("CommunitySite.Data.Entity.Friend", b =>
                {
                    b.Property<decimal>("Friendrowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("FRIENDROWID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Friendrowid"));

                    b.Property<string>("FriendStartDate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("FRIEND_START_DATE");

                    b.Property<decimal?>("Friendid1")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("FRIENDID1");

                    b.Property<decimal?>("Friendid2")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("FRIENDID2");

                    b.Property<decimal?>("IsFriend")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("IS_FRIEND");

                    b.HasKey("Friendrowid")
                        .HasName("FRIENDS_PK");

                    b.HasIndex(new[] { "Friendid1" }, "IX_FRIENDS_FRIENDID1");

                    b.HasIndex(new[] { "Friendid2" }, "IX_FRIENDS_FRIENDID2");

                    b.ToTable("FRIENDS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Include", b =>
                {
                    b.Property<decimal>("Includerowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("INCLUDEROWID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Includerowid"));

                    b.Property<decimal?>("Commentid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("COMMENTID");

                    b.Property<decimal?>("Postid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("POSTID");

                    b.HasKey("Includerowid")
                        .HasName("INCLUDES_PK");

                    b.HasIndex(new[] { "Commentid" }, "IX_INCLUDES_COMMENTID");

                    b.HasIndex(new[] { "Postid" }, "IX_INCLUDES_POSTID");

                    b.ToTable("INCLUDES", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Managegroup", b =>
                {
                    b.Property<decimal>("Memberrowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MEMBERROWID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Memberrowid"));

                    b.Property<decimal?>("Groupid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("GROUPID");

                    b.Property<string>("JoinDate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("JOIN_DATE");

                    b.Property<decimal?>("Userid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERID");

                    b.HasKey("Memberrowid")
                        .HasName("MANAGEGROUPS_PK");

                    b.HasIndex(new[] { "Groupid" }, "IX_MANAGEGROUPS_GROUPID");

                    b.HasIndex(new[] { "Userid" }, "IX_MANAGEGROUPS_USERID");

                    b.ToTable("MANAGEGROUPS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Message", b =>
                {
                    b.Property<decimal>("Messageid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MESSAGEID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Messageid"));

                    b.Property<string>("MessageText")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("MESSAGE_TEXT");

                    b.Property<decimal?>("Receiverid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("RECEIVERID");

                    b.Property<string>("SendDate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("SEND_DATE");

                    b.Property<decimal?>("Senderid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("SENDERID");

                    b.HasKey("Messageid")
                        .HasName("SYS_C0010567");

                    b.HasIndex(new[] { "Receiverid" }, "IX_MESSAGES_RECEIVERID");

                    b.HasIndex(new[] { "Senderid" }, "IX_MESSAGES_SENDERID");

                    b.ToTable("MESSAGES", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Permission", b =>
                {
                    b.Property<decimal>("Permissionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PERMISSIONID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Permissionid"));

                    b.Property<string>("PermissionName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("PERMISSION_NAME");

                    b.HasKey("Permissionid")
                        .HasName("SYS_C0010560");

                    b.ToTable("PERMISSIONS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Photo", b =>
                {
                    b.Property<decimal>("Photoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PHOTOID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Photoid"));

                    b.Property<byte[]>("PhotoInByte")
                        .HasColumnType("BLOB")
                        .HasColumnName("PHOTO_IN_BYTE");

                    b.Property<string>("PhotoName")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("PHOTO_NAME");

                    b.Property<decimal?>("PhotoSize")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PHOTO_SIZE");

                    b.Property<string>("PhotoType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("PHOTO_TYPE");

                    b.Property<decimal?>("Userid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERID");

                    b.HasKey("Photoid")
                        .HasName("SYS_C0010576");

                    b.HasIndex(new[] { "Userid" }, "IX_PHOTOS_USERID");

                    b.ToTable("PHOTOS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Post", b =>
                {
                    b.Property<decimal>("Postid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("POSTID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Postid"));

                    b.Property<decimal?>("Groupid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("GROUPID");

                    b.Property<decimal?>("Photoid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PHOTOID");

                    b.Property<string>("PostDate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("POST_DATE");

                    b.Property<string>("PostText")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("POST_TEXT");

                    b.Property<decimal?>("Userid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERID");

                    b.HasKey("Postid")
                        .HasName("SYS_C0010579");

                    b.HasIndex(new[] { "Groupid" }, "IX_POSTS_GROUPID");

                    b.HasIndex(new[] { "Photoid" }, "IX_POSTS_PHOTOID");

                    b.HasIndex(new[] { "Userid" }, "IX_POSTS_USERID");

                    b.ToTable("POSTS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Sitecomment", b =>
                {
                    b.Property<decimal>("Commentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("COMMENTID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Commentid"));

                    b.Property<string>("CommentDate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("COMMENT_DATE");

                    b.Property<string>("CommentText")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("COMMENT_TEXT");

                    b.Property<decimal?>("Postid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("POSTID");

                    b.Property<decimal?>("Userid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERID");

                    b.HasKey("Commentid")
                        .HasName("SYS_C0010584");

                    b.HasIndex(new[] { "Postid" }, "IX_SITECOMMENTS_POSTID");

                    b.HasIndex(new[] { "Userid" }, "IX_SITECOMMENTS_USERID");

                    b.ToTable("SITECOMMENTS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Sitegroup", b =>
                {
                    b.Property<decimal>("Groupid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("GROUPID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Groupid"));

                    b.Property<Guid>("Grouptechnicalname")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("RAW(16)")
                        .HasColumnName("GROUPTECHNICALNAME")
                        .HasDefaultValueSql("(sys_guid()) ");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("NAME");

                    b.Property<decimal?>("Ownerid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("OWNERID");

                    b.HasKey("Groupid")
                        .HasName("SYS_C0010571");

                    b.HasIndex(new[] { "Ownerid" }, "IX_SITEGROUPS_OWNERID");

                    b.ToTable("SITEGROUPS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Siteuser", b =>
                {
                    b.Property<decimal>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("USERID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Userid"));

                    b.Property<string>("BirthDate")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("LAST_NAME");

                    b.Property<decimal?>("Permissionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PERMISSIONID")
                        .HasDefaultValueSql("(1)");

                    b.Property<string>("School")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("SCHOOL");

                    b.Property<string>("SurName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("SUR_NAME");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("USERNAME");

                    b.Property<Guid>("Usertechnicalname")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("USERTECHNICALNAME")
                        .HasDefaultValueSql("(sys_guid()) ");

                    b.Property<string>("Workplace")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("WORKPLACE");

                    b.HasKey("Userid")
                        .HasName("SYS_C0010562");

                    b.HasIndex(new[] { "Permissionid" }, "IX_SITEUSERS_PERMISSIONID");

                    b.ToTable("SITEUSERS", "SZABOKD");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Friend", b =>
                {
                    b.HasOne("CommunitySite.Data.Entity.Siteuser", "Friendid1Navigation")
                        .WithMany("FriendFriendid1Navigations")
                        .HasForeignKey("Friendid1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010564");

                    b.HasOne("CommunitySite.Data.Entity.Siteuser", "Friendid2Navigation")
                        .WithMany("FriendFriendid2Navigations")
                        .HasForeignKey("Friendid2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010565");

                    b.Navigation("Friendid1Navigation");

                    b.Navigation("Friendid2Navigation");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Include", b =>
                {
                    b.HasOne("CommunitySite.Data.Entity.Sitecomment", "Comment")
                        .WithMany("Includes")
                        .HasForeignKey("Commentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010588");

                    b.HasOne("CommunitySite.Data.Entity.Post", "Post")
                        .WithMany("Includes")
                        .HasForeignKey("Postid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010587");

                    b.Navigation("Comment");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Managegroup", b =>
                {
                    b.HasOne("CommunitySite.Data.Entity.Sitegroup", "Group")
                        .WithMany("Managegroups")
                        .HasForeignKey("Groupid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010574");

                    b.HasOne("CommunitySite.Data.Entity.Siteuser", "User")
                        .WithMany("Managegroups")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010573");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Message", b =>
                {
                    b.HasOne("CommunitySite.Data.Entity.Siteuser", "Receiver")
                        .WithMany("MessageReceivers")
                        .HasForeignKey("Receiverid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010569");

                    b.HasOne("CommunitySite.Data.Entity.Siteuser", "Sender")
                        .WithMany("MessageSenders")
                        .HasForeignKey("Senderid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010568");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Photo", b =>
                {
                    b.HasOne("CommunitySite.Data.Entity.Siteuser", "User")
                        .WithMany("Photos")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010577");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Post", b =>
                {
                    b.HasOne("CommunitySite.Data.Entity.Sitegroup", "Group")
                        .WithMany("Posts")
                        .HasForeignKey("Groupid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010582");

                    b.HasOne("CommunitySite.Data.Entity.Photo", "Photo")
                        .WithMany("Posts")
                        .HasForeignKey("Photoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010581");

                    b.HasOne("CommunitySite.Data.Entity.Siteuser", "User")
                        .WithMany("Posts")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010580");

                    b.Navigation("Group");

                    b.Navigation("Photo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Sitecomment", b =>
                {
                    b.HasOne("CommunitySite.Data.Entity.Post", "Post")
                        .WithMany("Sitecomments")
                        .HasForeignKey("Postid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010585");

                    b.HasOne("CommunitySite.Data.Entity.Siteuser", "User")
                        .WithMany("Sitecomments")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010586");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Sitegroup", b =>
                {
                    b.HasOne("CommunitySite.Data.Entity.Siteuser", "Owner")
                        .WithMany("Sitegroups")
                        .HasForeignKey("Ownerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010572");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Siteuser", b =>
                {
                    b.HasOne("CommunitySite.Data.Entity.Permission", "Permission")
                        .WithMany("Siteusers")
                        .HasForeignKey("Permissionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("SYS_C0010563");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Permission", b =>
                {
                    b.Navigation("Siteusers");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Photo", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Post", b =>
                {
                    b.Navigation("Includes");

                    b.Navigation("Sitecomments");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Sitecomment", b =>
                {
                    b.Navigation("Includes");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Sitegroup", b =>
                {
                    b.Navigation("Managegroups");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("CommunitySite.Data.Entity.Siteuser", b =>
                {
                    b.Navigation("FriendFriendid1Navigations");

                    b.Navigation("FriendFriendid2Navigations");

                    b.Navigation("Managegroups");

                    b.Navigation("MessageReceivers");

                    b.Navigation("MessageSenders");

                    b.Navigation("Photos");

                    b.Navigation("Posts");

                    b.Navigation("Sitecomments");

                    b.Navigation("Sitegroups");
                });
#pragma warning restore 612, 618
        }
    }
}
